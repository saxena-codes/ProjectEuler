"""
Problem 2 - Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

    1,2,3,5,8,13,21,34,55,89,...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
# making list of fibonacci sequence
fibonacci_sequence = []
while True:
    new_number = 0
    if len(fibonacci_sequence) == 0:
        new_number = 1
    elif len(fibonacci_sequence) == 1:
        new_number = fibonacci_sequence[0] + fibonacci_sequence[0]
    else:
        last_number = fibonacci_sequence[-1]
        second_last_number = fibonacci_sequence[-2]
        new_number = last_number + second_last_number

    if new_number > 4000000:
        break
    else:
        fibonacci_sequence.append(new_number)
        continue

# Adding all the even numbers
answer = 0
for number in fibonacci_sequence:
    if number%2 == 0:
        answer += number
print("Answer: ")
print(answer)